{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Sites/groveryfileupload/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState('');\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: acceptedFiles => setFiles(acceptedFiles)\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setStatusMessage('No files selected for upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', files[0]);\n    try {\n      // Reset progress\n      setProgress(0);\n      setStatusMessage('Uploading...');\n      const response = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          // Calculate the percentage of upload completed\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n\n      // On success\n      setStatusMessage('File uploaded successfully to Google Drive!');\n      setProgress(100); // Ensure progress bar shows full completion\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setStatusMessage('Error uploading file to Google Drive.');\n      setProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-10 rounded-lg shadow-lg text-center w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/imgs/grovery-logo-update-color_tall.svg\",\n        alt: \"Company Logo\",\n        className: \"mx-auto mb-5 w-32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-5\",\n        children: \"Upload Your File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: \"border-2 border-dashed border-gray-400 p-5 rounded-lg cursor-pointer mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & drop files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mb-5\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-4 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-4 rounded-full\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-red-500\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3GrjEFsGwIHKNp8FwMBeIosr8NE=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useDropzone","axios","jsxDEV","_jsxDEV","App","_s","files","setFiles","progress","setProgress","statusMessage","setStatusMessage","getRootProps","getInputProps","onDrop","acceptedFiles","handleUpload","length","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","file","name","style","width","onClick","_c","$RefreshReg$"],"sources":["/Users/developer/Sites/groveryfileupload/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [statusMessage, setStatusMessage] = useState('');\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptedFiles) => setFiles(acceptedFiles),\n  });\n\n  const handleUpload = async () => {\n    if (files.length === 0) {\n      setStatusMessage('No files selected for upload.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', files[0]);\n\n    try {\n      // Reset progress\n      setProgress(0);\n      setStatusMessage('Uploading...');\n\n      const response = await axios.post('/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: (progressEvent) => {\n          // Calculate the percentage of upload completed\n          const percentCompleted = Math.round(\n            (progressEvent.loaded * 100) / progressEvent.total\n          );\n          setProgress(percentCompleted);\n        },\n      });\n\n      // On success\n      setStatusMessage('File uploaded successfully to Google Drive!');\n      setProgress(100);  // Ensure progress bar shows full completion\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setStatusMessage('Error uploading file to Google Drive.');\n      setProgress(0);\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-10 rounded-lg shadow-lg text-center w-96\">\n        {/* Company Logo */}\n        <img src=\"/imgs/grovery-logo-update-color_tall.svg\" alt=\"Company Logo\" className=\"mx-auto mb-5 w-32\" />\n\n        <h1 className=\"text-xl font-bold mb-5\">Upload Your File</h1>\n\n        {/* Drag and Drop Area */}\n        <div\n          {...getRootProps()}\n          className=\"border-2 border-dashed border-gray-400 p-5 rounded-lg cursor-pointer mb-5\"\n        >\n          <input {...getInputProps()} />\n          <p>Drag & drop files here, or click to select files</p>\n        </div>\n\n        {/* Selected Files */}\n        {files.length > 0 && (\n          <ul className=\"mb-5\">\n            {files.map((file) => (\n              <li key={file.name}>{file.name}</li>\n            ))}\n          </ul>\n        )}\n\n        {/* Progress Bar */}\n        {progress > 0 && (\n          <div className=\"w-full bg-gray-200 rounded-full h-4 mb-5\">\n            <div\n              className=\"bg-blue-600 h-4 rounded-full\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n        )}\n\n        {/* Upload Button */}\n        <button\n          onClick={handleUpload}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n        >\n          Upload\n        </button>\n\n        {/* Status Message */}\n        {statusMessage && (\n          <p className=\"mt-4 text-red-500\">{statusMessage}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}